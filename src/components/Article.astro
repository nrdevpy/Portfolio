---
import Skill from "./Skill.astro";
import type { ArticleType, ProjectType } from "../types";
import { render } from "astro:content";

const md = Astro.props;
const { data } = md;
const { title, skills, link, date } = data as ArticleType | ProjectType;
const { Content } = await render(md);
const { imageSrc }: { imageSrc?: string } = data;
function instanceOfProject(data: any): data is ProjectType {
    return "imageSrc" in data;
}

const isProject = instanceOfProject(data);
---

<article class="mb-section-gap">
    {
        imageSrc && (
            <a href={link} class="group flex gap-x-1 mb-4" target="_blank">
                <img
                    src={imageSrc}
                    alt={title}
                    class="w-full rounded-md object-cover aspect-[16/9] max-w-48"
                    width="474"
                    height="267"
                />
            </a>
        )
    }
    {
        link ? (
            <a href={link} class="group flex gap-x-1 mb-2" target="_blank">
                <h3 class="font-bold">{title}</h3>
                <img
                    src="/assets/link-icon.svg"
                    alt="Link Icon"
                    class="lg:group-hover:translate-x-0.5 lg:group-hover:-translate-y-0.5 transition-transform duration-custom ease-in-out"
                />
            </a>
        ) : (
            <h3 class="font-bold mb-2">{title}</h3>
        )
    }
    {
        !isProject && date && (
            <span class="block text-sm text-gray-400 mb-2">{date}</span>
        )
    }
    <div class="mb-4 prose prose-invert">
        <Content />
    </div>
    {
        skills && (
            <ul class="flex gap-x-2">
                {skills.map((skill) => (
                    <Skill name={skill} />
                ))}
            </ul>
        )
    }
</article>
