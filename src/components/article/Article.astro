---
import type { ArticleType, ProjectType } from "@src/types";
import ArticleImage from "@article/ArticleImage.astro";
import ArticleTitle from "@article/ArticleTitle.astro";
import Skills from "@ui/Skills.astro";
import ArticleDate from "./ArticleDate.astro";
import ArticleContent from "./ArticleContent.astro";

const md = Astro.props;
const { data } = md;
const { Content } = await md.render();
const { title, skills, link, date } = data as ArticleType | ProjectType;
const { imageSrc }: { imageSrc?: string } = data;

function instanceOfProject(data: any): data is ProjectType {
    return "imageSrc" in data;
}

const isProject = instanceOfProject(data);
---

<article
    class=`transition-backgroundColor transition-opacity duration-custom ease-in-out mb-section-gap lg:rounded-[10px] lg:p-4 ${link && "group lg:hover:backdrop-blur-sm lg:hover:bg-white/[.025] lg:hover:cursor-pointer lg:group-hover/opacity:[&:not(:hover)]:opacity-20 fn-article-link"}`
    data-href=`${link && link}`
>
    <ArticleImage title={title} imageSrc={imageSrc} link={link} />
    <ArticleTitle title={title} link={link} />
    <ArticleDate date={date} isProject={isProject} />
    <ArticleContent Content={Content} />
    <Skills skills={skills} />
</article>

<script>
    let listenersAttached = false;

    const handleArticleClick = () => {
        const articles = document.querySelectorAll(".fn-article-link");
        articles.forEach((article) => {
            if (!(article instanceof HTMLElement)) return;
            article.addEventListener("click", handleClick);
        });
    };

    const removeArticleClick = () => {
        const articles = document.querySelectorAll(".fn-article-link");
        articles.forEach((article) => {
            if (!(article instanceof HTMLElement)) return;
            article.removeEventListener("click", handleClick);
        });
    };

    const handleClick = (event: Event) => {
        event.preventDefault();
        const article = event.currentTarget as HTMLElement;
        if (article instanceof HTMLElement) {
            const { href } = article.dataset;
            if (href) {
                window.open(href, "_blank");
            }
        }
    };

    const handleResize = () => {
        if (window.innerWidth > 1024 && !listenersAttached) {
            handleArticleClick();
            listenersAttached = true;
        } else if (window.innerWidth <= 1024 && listenersAttached) {
            removeArticleClick();
            listenersAttached = false;
        }
    };

    // Attach the event listener on page load if the width is greater than 1024px
    if (window.innerWidth > 1024) {
        handleArticleClick();
        listenersAttached = true;
    }

    window.addEventListener("resize", handleResize);
</script>
